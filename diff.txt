diff --git a/docs/todo.md b/docs/todo.md
index 7aa138d..9372448 100644
--- a/docs/todo.md
+++ b/docs/todo.md
@@ -8,11 +8,15 @@
 		- [x] unit tests (jasmine)
 		- [x] watch should invoke the server
 		- [x] implement karma - probably not necessary to have any clever server stuff in the gulpfile which is a plus
+		- [] run integration tests in jasmine within watch but run in a browser on request (maybe multiple browsers?)
 - [] admin
 	- [] go through the Todd Moto style guide to ensure it complies
 	- [] should my js files be in camelCase?
 - [] list view
 	- [x] Move my FlickrDataService object to a Service
+	- [] update protractor code to work with aysnc data loading
+	- [] add load button and make clicking this button part of our integration test
+	- [] unit test without knowing about the http object - eg now I've learned I need to use jsonp my unit tests should not have to change - this has shown up a flaw in the design
 	- [] name my beforeEach functions to describe what they're up to
 	- [] make url private
 	- [] call the flickr API and display a list of results as text
diff --git a/src/css/styles.css b/src/css/styles.css
index e69de29..0a9b501 100644
--- a/src/css/styles.css
+++ b/src/css/styles.css
@@ -0,0 +1,4 @@
+input[type=button] {
+    font-size:30px;
+		width: 300px;
+}
diff --git a/src/index.html b/src/index.html
index adcb32d..58e3b27 100644
--- a/src/index.html
+++ b/src/index.html
@@ -11,13 +11,14 @@
 	</head>
 	<body ng-app='app'>
 		<div ng-controller='listController as listController'>
-			<div id='items' ng-repeat='item in items'>
+			<input id='loadDataButton' type='button' value='load data' ng-click='listController.loadData()'></input>
+			<div id='items' ng-repeat='item in listController.flickrData.value'>
 				<div id='item{{$index+1}}'>
-					<div id='listController.photoUrl'>dummy data</div>
-					<div id='listController.postTitle'>dummy data</div>
-					<div id='listController.postAuthor'>dummy data</div>
-					<div id='listController.publishDate'>dummy data</div>
-					<div id='listController.flickrLink'>dummy data</div>
+					<div id='photoUrl'>{{listController.flickrData.value[$index].photoUrl}}</div>
+					<div id='postTitle'>{{listController.flickrData.value[$index].postTitle}}</div>
+					<div id='postAuthor'>{{listController.flickrData.value[$index].postAuthor}}</div>
+					<div id='publishDate'>{{listController.flickrData.value[$index].publishDate}}</div>
+					<div id='flickrLink'>{{listController.flickrData.value[$index].flickrLink}}</div>
 				</div>
 			</div>
 		</div>
diff --git a/src/js/app.js b/src/js/app.js
index a01c5a5..7a5fc44 100644
--- a/src/js/app.js
+++ b/src/js/app.js
@@ -1,72 +1,14 @@
 
 (function() {
-	console.log("app.js called");
 	angular.module('app', [])
 		.controller('listController', listController)
 		.service('flickrDataService', FlickrDataService);
 
 	function listController(flickrDataService) {
-		this.items = [{
-			photoUrl: 'dummy data',
-			postTitle: 'dummy data',
-			postAuthor: 'dummy data',
-			publishDate: 'dummy data',
-			flickrLink: 'dummy data'
-		},{
-			photoUrl: 'dummy data',
-			postTitle: 'dummy data',
-			postAuthor: 'dummy data',
-			publishDate: 'dummy data',
-			flickrLink: 'dummy data'
-		},{
-			photoUrl: 'dummy data',
-			postTitle: 'dummy data',
-			postAuthor: 'dummy data',
-			publishDate: 'dummy data',
-			flickrLink: 'dummy data'
-		},{
-			photoUrl: 'dummy data',
-			postTitle: 'dummy data',
-			postAuthor: 'dummy data',
-			publishDate: 'dummy data',
-			flickrLink: 'dummy data'
-		},{
-			photoUrl: 'dummy data',
-			postTitle: 'dummy data',
-			postAuthor: 'dummy data',
-			publishDate: 'dummy data',
-			flickrLink: 'dummy data'
-		},{
-			photoUrl: 'dummy data',
-			postTitle: 'dummy data',
-			postAuthor: 'dummy data',
-			publishDate: 'dummy data',
-			flickrLink: 'dummy data'
-		},{
-			photoUrl: 'dummy data',
-			postTitle: 'dummy data',
-			postAuthor: 'dummy data',
-			publishDate: 'dummy data',
-			flickrLink: 'dummy data'
-		},{
-			photoUrl: 'dummy data',
-			postTitle: 'dummy data',
-			postAuthor: 'dummy data',
-			publishDate: 'dummy data',
-			flickrLink: 'dummy data'
-		},{
-			photoUrl: 'dummy data',
-			postTitle: 'dummy data',
-			postAuthor: 'dummy data',
-			publishDate: 'dummy data',
-			flickrLink: 'dummy data'
-		},{
-			photoUrl: 'dummy data',
-			postTitle: 'dummy data',
-			postAuthor: 'dummy data',
-			publishDate: 'dummy data',
-			flickrLink: 'dummy data'
-		}];
+		this.flickrData = null;
+		this.loadData = function() {
+			this.flickrData = flickrDataService.getData();
+		}
 	};
 
 	// returns a FlickrData object which it populates once the data has arrived
@@ -76,12 +18,72 @@
 	}
 
 	FlickrDataService.prototype.getData = function() {
-		this.http.get(this.flickrUrl);
+//		this.http.get(this.flickrUrl);
 		return new FlickrData();
 	}
 
 	function FlickrData() {
-
+		this.value = [{
+			photoUrl: 'photoUrl',
+			postTitle: 'postTitle',
+			postAuthor: 'postAuthor',
+			publishDate: 'publishDate',
+			flickrLink: 'flickrLink'
+		},{
+			photoUrl: 'photoUrl',
+			postTitle: 'postTitle',
+			postAuthor: 'postAuthor',
+			publishDate: 'publishDate',
+			flickrLink: 'flickrLink'
+		},{
+			photoUrl: 'photoUrl',
+			postTitle: 'postTitle',
+			postAuthor: 'postAuthor',
+			publishDate: 'publishDate',
+			flickrLink: 'flickrLink'
+		},{
+			photoUrl: 'photoUrl',
+			postTitle: 'postTitle',
+			postAuthor: 'postAuthor',
+			publishDate: 'publishDate',
+			flickrLink: 'flickrLink'
+		},{
+			photoUrl: 'photoUrl',
+			postTitle: 'postTitle',
+			postAuthor: 'postAuthor',
+			publishDate: 'publishDate',
+			flickrLink: 'flickrLink'
+		},{
+			photoUrl: 'photoUrl',
+			postTitle: 'postTitle',
+			postAuthor: 'postAuthor',
+			publishDate: 'publishDate',
+			flickrLink: 'flickrLink'
+		},{
+			photoUrl: 'photoUrl',
+			postTitle: 'postTitle',
+			postAuthor: 'postAuthor',
+			publishDate: 'publishDate',
+			flickrLink: 'flickrLink'
+		},{
+			photoUrl: 'photoUrl',
+			postTitle: 'postTitle',
+			postAuthor: 'postAuthor',
+			publishDate: 'publishDate',
+			flickrLink: 'flickrLink'
+		},{
+			photoUrl: 'photoUrl',
+			postTitle: 'postTitle',
+			postAuthor: 'postAuthor',
+			publishDate: 'publishDate',
+			flickrLink: 'flickrLink'
+		},{
+			photoUrl: 'photoUrl',
+			postTitle: 'postTitle',
+			postAuthor: 'postAuthor',
+			publishDate: 'publishDate',
+			flickrLink: 'flickrLink'
+		}];
 	}
 }());
 
diff --git a/tests/integration/list_view_spec.js b/tests/integration/list_view_spec.js
index ba1b3e8..05b2695 100644
--- a/tests/integration/list_view_spec.js
+++ b/tests/integration/list_view_spec.js
@@ -1,6 +1,7 @@
 describe('Item view spec', function() {
 	beforeEach(function() {
 		browser.get('http://localhost:8001');
+		by.css('#loadDataButton').click();
 	});
 	
 	describe('should list the data for 10 flickr posts', function() {
